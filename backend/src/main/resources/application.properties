spring.application.name=crmji
# Server Port: Defines the port on which the Spring Boot application will run.
server.port=8080

# Database Connection URL: Points to the 'crm_database' schema in a local MySQL instance.
# spring.datasource.url=jdbc:mysql://localhost:3306/crm_db
spring.datasource.url=jdbc:mysql://localhost:3306/crm_db?useSSL=false&serverTimezone=UTC


# # Database Username: The username for authenticating with the MySQL server.
# spring.datasource.username=root

# # Database Password: The password for authenticating with the MySQL server.
# spring.datasource.password=1234

spring.datasource.username=springuser
spring.datasource.password=springpass

# Hibernate DDL Auto: Configures Hibernate to automatically update the database schema based on the Entity models.
# 'update' is safe for development. It creates tables if they don't exist and alters them if the model changes.
# Options: validate | update | create | create-drop
spring.jpa.hibernate.ddl-auto=update

# Hibernate Dialect: Tells Hibernate to use the MySQL-specific SQL dialect for generating optimized queries.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Show SQL: When enabled, Hibernate will log all generated SQL statements to the console. Useful for debugging.
spring.jpa.show-sql=true

# Format SQL: When enabled, Hibernate will format the SQL logged to the console, making it easier to read.
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration for JJWT 0.12.5
# Generate a secure 256-bit (32 character) secret key for production!
# Use: openssl rand -base64 32 in terminal to generate a secure key
# Replace with a proper 512-bit (64+ character) secret key
app.jwt.secret=3K2vS8pX5zR7wT1qY9uL0iJ4hG6fD2cV7nM8xB1qW5eR3tY6uH9jK4gF0dS5aP2oL7iE1rT4yU8wJ3hV6bN9mX0cQ5zF2kH8jD3sL6pR1tY4uI7oK9gF0dS5aP2
# 24 hours in milliseconds (1000 * 60 * 60 * 24)
app.jwt.expirationMs=86400000 

# Security logging (optional)
logging.level.org.springframework.security=DEBUG
